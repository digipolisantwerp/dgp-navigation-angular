/**
 * Navigation
 * --------------------------------------------------
 * - navigation behaviour states
 * - top navigation
 * - side navigation:
 *   - left navigation
 *   - right navigation
 */

// Badges variants

// @mixin badge-variant($color, $background) {
//   background-color: $background;
//   color: $color;
// }

/**
 * HTML behaviour when side navigation is open
 */

html.nav-left-open,
html.nav-right-open {

  @include mq($screen-xs-max, "max") {
    body {
      overflow-x: hidden;
    }
  }
}

html.nav-left-open {

  @include mq($screen-xs-max, "max") {
    .main {
      transform: translate ($nav-aside-width, 0);
    }
    .nav-left {
      transform: translate(0, 0);
    }
  }
}

html.nav-right-open {

  @include mq($screen-xs-max, "max") {
    .main {
      transform: translate ($nav-aside-width, 0);
    }
    .nav-right {
      transform: translate(0, 0);
    }
  }
}




/**
 * Default behaviour is that there is a fixed nav-top,
 * so we need to 'fix' the body's padding
 */

html {
  &.has-nav-left {
    .main {
      @include mq($screen-sm) {
        padding-left: $nav-aside-width;
      }
    }

    /**
     * If the left nav can always be closed we need some more styling
     */
    &.nav-left-can-always-close {

      // Nav left is NOT open
      @include mq($screen-sm) {
        .main {
          padding-left: 0;
        }
        .nav-left {
          transform: translate(-$nav-aside-width, 0);
        }
      }

      // Nav left is open
      &.nav-left-open {
        @include mq($screen-sm) {
          .main {
            padding-left: $nav-aside-width;
          }
          .nav-left {
            transform: translate(0, 0);
          }
        }
      }

      // Make sure the toggle is always visible
      .nav-top { // not navbar-toggle because it already exists - sidenav-toggle? !!
        &-toggle {
          @include mq($screen-sm) {
            display: inline-block;
          }
        }
      }
    }

    /**
     * The left nav can always be closed and starts open on desktop
     */
    &.nav-left-can-always-close-and-starts-open {

      // Nav left is NOT open
      @include mq($screen-sm) {
        .main {
          padding-left: $nav-aside-width;
        }
        .nav-left {
          transform: translate(0, 0);
        }
      }

      // Nav left is open
      &.nav-left-open {
        @include mq($screen-sm) {
          .main {
            padding-left: 0;
          }
          .nav-left {
            transform: translate(-$nav-aside-width, 0);
          }
        }
      }

      // Make sure the toggle is always visible
      .nav-top { // maybe navbar !!
        &-toggle {
          @include mq($screen-sm) {
            display: inline-block;
          }
        }
      }
    }
  }

  &.has-nav-right {
    .main {
      @include mq($screen-sm) {
        padding-right: $nav-aside-width;
      }
    }

    /**
     * If the right nav can always be closed we need some more styling
     */
    &.nav-right-can-always-close {

      // Nav right is NOT open
      @include mq($screen-sm) {
        .main {
          padding-right: 0;
        }
        .nav-right {
          transform: translate($nav-aside-width, 0);
        }
      }

      // Nav right is open
      &.nav-right-open {
        @include mq($screen-sm) {
          .main {
            padding-right: $nav-aside-width;
          }
          .nav-right {
            transform: translate(0, 0);
          }
        }
      }

      // Make sure the toggle is always visible
      .nav-top { // maybe .navbar
        &-toggle {
          @include mq($screen-sm) {
            display: inline-block;
          }
        }
      }
    }

    /**
     * The right nav can always be closed and starts open on desktop
     */
    &.nav-right-can-always-close-and-starts-open {

      // Nav right is NOT open
      @include mq($screen-sm) {
        .main {
          padding-right: $nav-aside-width;
        }
        .nav-right {
          transform: translate(0, 0);
        }
      }

      // Nav right is open
      &.nav-right-open {
        @include mq($screen-sm) {
          .main {
            padding-right: 0;
          }
          .nav-right {
            transform: translate($nav-aside-width, 0);
          }
        }
      }

      // Make sure the toggle is always visible
      .nav-top { // maybe .navbar !!
        &-toggle {
          @include mq($screen-sm) {
            display: inline-block;
          }
        }
      }
    }
  }

}


.main {
  // Properties that will make page transition animations really smooth
  position: absolute;
  transition: opacity ($animation-speed * 2) linear, padding $animation-speed linear, transform $animation-speed linear;
  width: 100%;

  /**
   * ng-animate classes
   */
  &.ng-enter {
    opacity: 0;
  }
  &.ng-leave {
    opacity: 1;
  }
  &.ng-enter.ng-enter-active {
    opacity: 1;
  }
  &.ng-leave.ng-leave-active {
    opacity: 0;
  }
}




/**
 * Top navigation
 * --------------------------------------------------
 */

.navbar-inverse {
 font-size: 17px; // default value should be changed according to media query
 -webkit-font-smoothing: antialiased;
 li > a:hover {
  text-decoration: underline;
 }
}

.navbar-brand {
  padding: 0;
  img {
    height: 50px; // default value should be changed according to media query
    width: 50px; // default value should be changed according to media query
  }
}

.navbar-fixed-top {
  border-width: 0;
}

.navbar-header {


  .navbar-nav {
    a {
      color: $nav-top-link-color;
    }

    .navbar-toggle-sidenav {
      display: inline-block;
      position: relative;

      a {
        color: $nav-top-link-color;
      }

      @include mq($screen-sm) {
        display: none;
      }
    }

    .navbar-app {
      display: inline-block;
      position: relative;

      @include mq($screen-xs-max, "max") {
        display: none;
      }

      a {
        margin: 0 $nav-top-padding 0 0;
        padding: 20px;
        text-decoration: none;

        &:hover,
        &:active,
        &:focus {
          color: $nav-top-link-hover-color;
          text-decoration: none;

        }
      }

      h1 {
        font-size: 17px;
        font-weight: 700;
        line-height: $nav-top-height; // depends on media query !!
        margin: 0;

        span {
          font-weight: 400;
        }
      }
    }
  }

}




/**
 * Side navigation (styling for both left and right navigation)
 * --------------------------------------------------
 */

.nav-aside {
  background: $nav-aside-bg-color;
  bottom: 0;
  font-size: 17px;
  position: fixed;
  top: $nav-top-height; // depends on media query !!
  transition: transform $animation-speed linear;
  width: $nav-aside-width;
  z-index: 4;
  -webkit-font-smoothing: antialiased;

  /**
   * Styling for semi-transparent line
   */
  &:before {
    background: rgba(0, 0, 0, .12);
    bottom: 0;
    content: '';
    height: 100%;
    pointer-events: none;
    position: absolute;
    top: 0;
    width: 2px;
    z-index: 2;
  }

  /**
   * For semantics & correct scrolling behaviour
   */
  > aside {
    height: 100%;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    -webkit-overflow-scrolling: -blackberry-touch;
  }

  ul {
    list-style: none;
    margin-bottom: 0;
    padding-left: 0;
  }

  &-title {
    color: $nav-aside-title-color;
    font-size: 90%;
    font-weight: 600;
    margin: $nav-aside-vertical-padding / 2 0 16px 0;
    padding: 0 $nav-aside-horizontal-padding;
    text-transform: uppercase;

    &:first-letter {
      font-size: 110%;
    }

    + ul {
      margin-top: -$nav-aside-vertical-padding;
    }
  }

  &-section {
    padding: $nav-aside-vertical-padding 0;
    position: relative;

    /**
     * section bottom border
     */
    &:not(:last-child) {
      &:after {
        background: $nav-aside-section-border-color;
        bottom: 0;
        content: '';
        height: 1px;
        left: $nav-aside-horizontal-padding;
        position: absolute;
        right: $nav-aside-horizontal-padding;
      }
    }

    /**
     * Menu: all levels
     */
    li {
      a {
        color: $nav-aside-link-color;
        display: table;
        padding: $nav-aside-vertical-padding $nav-aside-horizontal-padding;
        text-decoration: none;
        width: 100%;

        &:hover,
        &:active,
        &:focus {
          background-color: $nav-aside-link-hover-background-color;
          color: $nav-aside-link-hover-color;

          // .badge {
          //   @include badge-variant($nav-aside-badge-hover-color, $nav-aside-badge-hover-background-color);
          // }
          // .badge-info {
          //   @include badge-variant($badge-info-bg, $nav-aside-badge-hover-background-color);
          // }
          // .badge-primary {
          //   @include badge-variant($badge-primary-bg, $nav-aside-badge-hover-background-color);
          // }
          // .badge-success {
          //   @include badge-variant($badge-success-bg, $nav-aside-badge-hover-background-color);
          // }
          // .badge-warning {
          //   @include badge-variant($badge-warning-bg, $nav-aside-badge-hover-background-color);
          // }
          // .badge-danger {
          //   @include badge-variant($badge-danger-bg, $nav-aside-badge-hover-background-color);
          // }
        }

        &:focus {
          box-shadow: none;
        }

        > *, {
          display: table-cell;
          vertical-align: middle;
        }

        > i {
          padding: 3px 12px 0 0;
          vertical-align: top;
        }
      }

      &.active {
        a {
          color: $nav-aside-link-active-color;
          font-weight: 700;

          + ul {
            a {
              color: $nav-aside-link-color;
              font-weight: normal;

              &:hover,
              &:active,
              &:focus {
                background-color: $nav-aside-link-hover-background-color;
                color: $nav-aside-link-hover-color;
              }
            }
          }
        }
      }
    }

    /**
     * Menu first level
     */
    > ul {
      > li {
        border-bottom: 1px solid transparent;
        height: auto;
        overflow: hidden;
        position: relative;

        &.can-open {
          &:before {
            content: "\f0d7";
            font-family: FontAwesome;
            font-style: normal;
            font-weight: normal;
            pointer-events: none;
            position: absolute;
            right: $nav-aside-horizontal-padding;
            text-decoration: inherit;
            top: $nav-aside-vertical-padding;
            transition: color $animation-speed linear, transform $animation-speed linear;
            z-index: 2;
          }

          &.open {
            border-bottom: 1px solid $nav-aside-bg-color;
            background: $nav-aside-item-open-color;

            &:before {
              transform: rotate(180deg);
            }

            > a {
              font-weight: 700;
            }
          }

          > a {
            padding-right: 36px;
          }
        }

        &.has-active-item {
          > a {
            font-weight: 700;
          }
        }
      }


      /**
       * Menu second level
       */

      ul {
        display: none;

        li {
          a {
            padding: $nav-aside-item-vertical-padding $nav-aside-horizontal-padding $nav-aside-item-vertical-padding (2 * $nav-aside-horizontal-padding);
          }

          &.active {
            a {
              &:hover,
              &:active,
              &:focus {
                // .badge {
                //   background: $nav-aside-badge-active-background-hover-color;
                //   color: $nav-aside-badge-active-hover-color;
                // }
              }
            }

            // .badge {
            //   background: $nav-aside-badge-active-background-color;
            //   color: $nav-aside-badge-active-color;
            // }
          }
        }
      }
    }
  }

  // .badge {
  //   background-color: $nav-aside-badge-background-color;
  //   color: $nav-aside-badge-color;
  // }

  .badge,
  .badge-danger,
  .badge-info,
  .badge-primary,
  .badge-success,
  .badge-warning {
    float: right;
    margin-top: 3px;
    transition: background $animation-speed linear, color $animation-speed linear;
  }

}




/**
 * Left navigation
 * (add-on for .nav-aside)
 */

.nav-left {
  left: 0;
  transform: translate(-$nav-aside-width, 0);

  @include mq($screen-sm) {
    transform: translate(0, 0);
  }

  &:before {
    right: 0;
  }
}




/**
 * Right navigation
 * (add-on for .nav-aside)
 */

.nav-right {
  right: 0;
  transform: translate($nav-aside-width, 0);

  @include mq($screen-sm) {
    transform: translate(0, 0);
  }

  &:before {
    left: 0;
  }
}
